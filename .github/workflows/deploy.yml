# Simple workflow for deploying static content to GitHub Pages
name: Test and deploy website

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "deploy-test"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm install
      - name: Run Jest tests
        run: npm test
        
  deploy:
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  health_check:
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ always() }} # Always run, even if deploy fails
    steps:
      - name: Health check deployed site
        id: healthcheck
        uses: jtalk/url-health-check-action@v4
        with:
          url: ${{ needs.deploy.outputs.page_url }}
          max-attempts: 3
          retry-delay: 5s
  rollback:
    needs: [deploy, health_check]
    runs-on: ubuntu-latest
    if: ${{ needs.health_check.result == 'failure' }}
    steps:
      - name: Find previous successful commit
        id: prev_commit
        run: |
          PREV_COMMIT=$(git rev-list --skip=1 --max-count=1 ${{ needs.deploy.outputs.commit_sha }})
          echo "prev_commit=$PREV_COMMIT" >> $GITHUB_OUTPUT

      - name: Checkout previous commit
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.prev_commit.outputs.prev_commit }}

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact (rollback)
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy previous commit to GitHub Pages (rollback)
        uses: actions/deploy-pages@v4

      - name: Notify rollback
        run: echo "Rollback completed to commit ${{ steps.prev_commit.outputs.prev_commit }}"


  test-self-hosted:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm install
      - name: Run Jest tests
        run: npm test
        
  deploy-self-hosted:
    needs: test-self-hosted
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to self hosted
        run: |
          cp -r ./* /var/www/html/
